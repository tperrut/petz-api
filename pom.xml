<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>desafio.petz</groupId>
	<artifactId>petz</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>petz</name>
	<description>Desafio interview </description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>
	
	<scm>
        <connection>scm:git:git@tperrut/petz-api.git</connection>
        <developerConnection>scm:git:git@tperrut/petz-api.git</developerConnection>
        <url>https://github.com/tperrut/petz-api</url>
    </scm>
    
	<profiles>
		<profile>
			<id>prod</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>false</activeByDefault>
				<!-- activate if system properties 'env=prod' -->
				<property>
					<name>env</name>
					<value>dev</value>
				</property>

			</activation>
			<properties>
				<env>prod</env>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>false</activeByDefault>
				<!-- activate if system properties 'env=dev' -->
				<property>
					<name>env</name>
					<value>dev</value>
				</property>

			</activation>
			<properties>
				<env>dev</env>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>true</activeByDefault>
				<!-- activate if system properties 'env=test' -->
				<property>
					<name>env</name>
					<value>test</value>
				</property>

			</activation>
			<properties>
				<env>test</env>
			</properties>
		</profile>
		<profile>
			<id>deploy-heroku</id>
			<properties>
				<maven.deploy.skip>false</maven.deploy.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.heroku.sdk</groupId>
						<artifactId>heroku-maven-plugin</artifactId>
						<version>3.0.2</version>
						<configuration>
							<appName>desafio-petz-api</appName>
							<processTypes>
								<web>java $JAVA_OPTS -jar -Dserver.port=$PORT
									target/${project.build.finalName}.jar</web>
							</processTypes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
				        <groupId>org.jacoco</groupId>
				        <artifactId>jacoco-maven-plugin</artifactId>
				        <version>0.8.6</version>
				        <executions>
				            <execution>
				                <goals>
				                    <goal>prepare-agent</goal>
				                </goals>
				            </execution>
				            <!-- attached to Maven test phase -->
				            <execution>
				                <id>report</id>
				                <phase>test</phase>
				                <goals>
				                    <goal>report</goal>
				                </goals>
					            
				            </execution>
				        </executions>
				    </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.springfox </groupId>
			<artifactId>springfox-swagger2 </artifactId>
			<version>2.6.1 </version>
		</dependency>

		<dependency>
			<groupId>io.springfox </groupId>
			<artifactId>springfox-swagger-ui </artifactId>
			<version>2.6.1 </version>
		</dependency>

		<dependency>
			<groupId>net.sf.ehcache </groupId>
			<artifactId>ehcache</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId><!--$NO-MVN-MAN-VER$-->
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>show-profiles</id>
						<phase>compile</phase>
						<goals>
							<goal>active-profiles</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
				<version>3.0.0-M1</version> <configuration> <skipTests>true</skipTests> </configuration> 
				</plugin> -->

			 <plugin>
		        <groupId>org.sonarsource.scanner.maven</groupId>
		        <artifactId>sonar-maven-plugin</artifactId>
		        <version>3.7.0.1746</version>
		      </plugin>
		      
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<configuration>
					<excludes>
						<exclude>in/sivalabs/freelancerkit/entities/*</exclude>
						<exclude>in/sivalabs/freelancerkit/*Application</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					
					<execution>
						<id>default-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						
					</execution>
					
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						
						<configuration>
		                    <rules>
		                        <rule>
			                        <limits>
			                           <limit>
									        <counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.60</minimum>
									   </limit>
			                        </limits>
		                        </rule>
		                        <!-- Regra ousada 
		                         <rule>
								    <element>CLASS</element>
								    <excludes>
								      <exclude>*Test</exclude>
								    </excludes>
								    <limits>
								      <limit>
								        <counter>LINE</counter>
								        <value>COVEREDRATIO</value>
								        <minimum>50%</minimum>
								      </limit>
								    </limits>
								  </rule> -->
		                    </rules>
		                </configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
			
		     
		    </plugins>
		</pluginManagement>
	</build>
</project>
