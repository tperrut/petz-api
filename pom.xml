<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>desafio.petz</groupId>
	<artifactId>petz-api</artifactId>
	<version>0.0.6-SNAPSHOT</version>
	<name>petz-api</name>
	<description>Desafio interview </description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- Organization and project keys are displayed in the right sidebar of the project homepage -->
		<sonar.organization>tperrut</sonar.organization>
		<sonar.projectKey>tperrut_petz-api</sonar.projectKey>
		
		<jib-maven-plugin.version>2.6.0</jib-maven-plugin.version>
		<!-- lib de seguranÃ§a pra impedir que tenha acesso como root -->
        <docker.distroless.image>gcr.io/distroless/java:11</docker.distroless.image>
        <docker.repo.url>tperrut</docker.repo.url>
        <docker.repo.project>petz-api</docker.repo.project>
        <docker.image.name>${docker.repo.url}/${docker.repo.project}</docker.image.name>
	</properties>
	
	<scm>
        <connection>scm:tperrut@github</connection>
        <developerConnection>scm:tperrut@github</developerConnection>
        <url>https://sonarcloud.io</url>
    </scm>
    
	<dependencies>
	
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!--Database  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Swagger e Swagger UI -->
		<dependency>
			<groupId>io.springfox </groupId>
			<artifactId>springfox-swagger2 </artifactId>
			<version>2.6.1 </version>
		</dependency>

		<dependency>
			<groupId>io.springfox </groupId>
			<artifactId>springfox-swagger-ui </artifactId>
			<version>2.6.1 </version>
		</dependency>
		
		<!-- Ehcache  -->
		<dependency>
			<groupId>net.sf.ehcache </groupId>
			<artifactId>ehcache</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Token Jwt -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.7.0</version>
		</dependency>
		
		<!-- Security  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
	
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<executions>
					<execution>
						<id>show-profiles</id>
						<phase>compile</phase>
						<goals>
							<goal>active-profiles</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		      
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<configuration>
					<excludes>
						<exclude>in/sivalabs/freelancerkit/entities/*</exclude>
						<exclude>in/sivalabs/freelancerkit/*Application</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					
					<execution>
						<id>default-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						
					</execution>
					
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>test</phase>
						
						<configuration>
		                    <rules>
		                        <rule>
			                        <limits>
			                           <limit>
									        <counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.60</minimum>
									   </limit>
			                        </limits>
		                        </rule>
		                    </rules>
		                </configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
			
		      <plugin>
		        <groupId>org.sonarsource.scanner.maven</groupId>
		        <artifactId>sonar-maven-plugin</artifactId>
		        <version>3.7.0.1746</version>
		        <configuration>
		          <goalPrefix>sonar</goalPrefix>
		        </configuration>
		      </plugin>
		      
		       <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib-maven-plugin.version}</version>
                <configuration>
                    <from>
                        <image>${docker.distroless.image}</image>
                    </from>
                    <to>
                        <image>${docker.image.name}</image>
                        <tags>
                            <tag>${project.version}</tag>
                        </tags>
                    </to>
                    <container>
                        <mainClass>br.com.desafio.petz.api.PetzApplication</mainClass>
                    </container>
                </configuration>
            </plugin>
		    </plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
		    <id>deploy-docker</id>
		    <properties>
		        <maven.deploy.skip>true</maven.deploy.skip>
		    </properties>
		    <build>
		        <plugins>
		            <plugin>
		                <groupId>com.google.cloud.tools</groupId>
		                <artifactId>jib-maven-plugin</artifactId>
		                <version>2.2.0</version>
		                <configuration>
		                    <to>
		                        <image>${docker.image.name}</image>
		                        <tags>
		                            <tag>${project.version}</tag>
		                            <tag>latest</tag>
		                        </tags>
		                    </to>
		                    
		                    
		                </configuration>
		            </plugin>
		        </plugins>
		    </build>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>false</activeByDefault>
				<!-- activate if system properties 'env=prod' -->
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
			<properties>
				<env>prod</env>
			</properties>
		</profile>
		<profile>
			<id>docker</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>false</activeByDefault>
				<!-- activate if system properties 'env=prod' -->
				<property>
					<name>env</name>
					<value>docker</value>
				</property>
			</activation>
			<properties>
				<env>docker</env>
			</properties>
		</profile>
			
		<profile>
			<id>dev</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>false</activeByDefault>
				<!-- activate if system properties 'env=dev' -->
				<property>
					<name>env</name>
					<value>dev</value>
				</property>

			</activation>
			<properties>
				<env>dev</env>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<!-- this profile is active by default -->
				<activeByDefault>false</activeByDefault>
				<!-- activate if system properties 'env=test' -->
				<property>
					<name>env</name>
					<value>test</value>
				</property>

			</activation>
			<properties>
				<env>test</env>
			</properties>
		</profile>
		<profile>
			<id>deploy-heroku</id>
			<properties>
				<maven.deploy.skip>false</maven.deploy.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.heroku.sdk</groupId>
						<artifactId>heroku-maven-plugin</artifactId>
						<version>3.0.2</version>
						<configuration>
							<appName>desafio-petz-api</appName>
							<processTypes>
								<web>java $JAVA_OPTS -jar -Dserver.port=$PORT
									target/${project.build.finalName}.jar</web>
							</processTypes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
</project>
