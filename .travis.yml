language: java

services:
  - docker
      
jdk:
  - openjdk11
  
sudo: required

install: true

before_install:
  - echo "before_install  ---> "
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - sudo chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - source /usr/local/bin/docker-compose
  - sudo chmod +x mvnw ./deployment/*
  - ./mvnw package -P prod -DskipTests=true
  
  
#  - ./mvnw clean package -DskipTests=true

before_script:
  - echo "before_script  ---> "

  - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin   #login to dockerhub
  - curl https://cli-assets.heroku.com/install.sh | sh  #install heroku
  - docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com  #login to registry.heroku.com 
  
script:
  - echo "_script  ---> "
  - sudo docker-compose up -d --build
  - ./deployment/run-tests.sh
  - docker image ls;
  - docker build -t tperrut/petz-api . #mvn jib:dockerBuild 
  - docker image ls;
  - docker tag petz-api registry.heroku.com/$HEROKU_APP;
  - docker push registry.heroku.com/$HEROKU_APP/web;

before_deploy:
  - echo "before_deploy  ---> "

  - ./mvnw package -P prod -DskipTests=true


deploy:   
  provider: script
  script: 
    - echo 'HEROKU_APP'
    - echo '$HEROKU_APP'  
    - docker push tperrut/petz-api;
    - docker push registry.heroku.com/$HEROKU_APP/web;
    - heroku container:release web --app $HEROKU_APP
  on:
    branch: feature/add-docker


  
addons:
  sonarcloud:
    organization: tperrut
    token:
      secure: $SONAR_API_KEY


cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.sonar/cache'  



git:
  depth: false
  
